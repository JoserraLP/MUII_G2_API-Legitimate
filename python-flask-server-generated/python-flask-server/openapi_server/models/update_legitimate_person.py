# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class UpdateLegitimatePerson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, old_mac=None, new_mac=None):  # noqa: E501
        """UpdateLegitimatePerson - a model defined in OpenAPI

        :param old_mac: The old_mac of this UpdateLegitimatePerson.  # noqa: E501
        :type old_mac: str
        :param new_mac: The new_mac of this UpdateLegitimatePerson.  # noqa: E501
        :type new_mac: str
        """
        self.openapi_types = {
            'old_mac': str,
            'new_mac': str
        }

        self.attribute_map = {
            'old_mac': 'old_MAC',
            'new_mac': 'new_MAC'
        }

        self._old_mac = old_mac
        self._new_mac = new_mac

    @classmethod
    def from_dict(cls, dikt) -> 'UpdateLegitimatePerson':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UpdateLegitimatePerson of this UpdateLegitimatePerson.  # noqa: E501
        :rtype: UpdateLegitimatePerson
        """
        return util.deserialize_model(dikt, cls)

    @property
    def old_mac(self):
        """Gets the old_mac of this UpdateLegitimatePerson.


        :return: The old_mac of this UpdateLegitimatePerson.
        :rtype: str
        """
        return self._old_mac

    @old_mac.setter
    def old_mac(self, old_mac):
        """Sets the old_mac of this UpdateLegitimatePerson.


        :param old_mac: The old_mac of this UpdateLegitimatePerson.
        :type old_mac: str
        """

        self._old_mac = old_mac

    @property
    def new_mac(self):
        """Gets the new_mac of this UpdateLegitimatePerson.


        :return: The new_mac of this UpdateLegitimatePerson.
        :rtype: str
        """
        return self._new_mac

    @new_mac.setter
    def new_mac(self, new_mac):
        """Sets the new_mac of this UpdateLegitimatePerson.


        :param new_mac: The new_mac of this UpdateLegitimatePerson.
        :type new_mac: str
        """

        self._new_mac = new_mac
